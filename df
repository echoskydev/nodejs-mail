[33mcommit ab586e5d610de5c1c7325559e297cf27acaf32e8[m[33m ([m[1;36mHEAD -> [m[1;32mmaster[m[33m, [m[1;31morigin/master[m[33m, [m[1;31morigin/HEAD[m[33m)[m
Author: echosky <echosky.dev@gmail.com>
Date:   Wed Jan 9 09:27:09 2019 +0700

    Update sendEmail Component

[1mdiff --git a/.idea/encodings.xml b/.idea/encodings.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..15a15b2[m
[1m--- /dev/null[m
[1m+++ b/.idea/encodings.xml[m
[36m@@ -0,0 +1,4 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<project version="4">[m
[32m+[m[32m  <component name="Encoding" addBOMForNewFiles="with NO BOM" />[m
[32m+[m[32m</project>[m
\ No newline at end of file[m
[1mdiff --git a/.idea/misc.xml b/.idea/misc.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..28a804d[m
[1m--- /dev/null[m
[1m+++ b/.idea/misc.xml[m
[36m@@ -0,0 +1,6 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<project version="4">[m
[32m+[m[32m  <component name="JavaScriptSettings">[m
[32m+[m[32m    <option name="languageLevel" value="ES6" />[m
[32m+[m[32m  </component>[m
[32m+[m[32m</project>[m
\ No newline at end of file[m
[1mdiff --git a/.idea/modules.xml b/.idea/modules.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..f4e502d[m
[1m--- /dev/null[m
[1m+++ b/.idea/modules.xml[m
[36m@@ -0,0 +1,8 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<project version="4">[m
[32m+[m[32m  <component name="ProjectModuleManager">[m
[32m+[m[32m    <modules>[m
[32m+[m[32m      <module fileurl="file://$PROJECT_DIR$/.idea/nodejs-mail.iml" filepath="$PROJECT_DIR$/.idea/nodejs-mail.iml" />[m
[32m+[m[32m    </modules>[m
[32m+[m[32m  </component>[m
[32m+[m[32m</project>[m
\ No newline at end of file[m
[1mdiff --git a/.idea/nodejs-mail.iml b/.idea/nodejs-mail.iml[m
[1mnew file mode 100644[m
[1mindex 0000000..c956989[m
[1m--- /dev/null[m
[1m+++ b/.idea/nodejs-mail.iml[m
[36m@@ -0,0 +1,8 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<module type="WEB_MODULE" version="4">[m
[32m+[m[32m  <component name="NewModuleRootManager">[m
[32m+[m[32m    <content url="file://$MODULE_DIR$" />[m
[32m+[m[32m    <orderEntry type="inheritedJdk" />[m
[32m+[m[32m    <orderEntry type="sourceFolder" forTests="false" />[m
[32m+[m[32m  </component>[m
[32m+[m[32m</module>[m
\ No newline at end of file[m
[1mdiff --git a/.idea/workspace.xml b/.idea/workspace.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..b809f03[m
[1m--- /dev/null[m
[1m+++ b/.idea/workspace.xml[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<project version="4">[m
[32m+[m[32m  <component name="PropertiesComponent">[m
[32m+[m[32m    <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />[m
[32m+[m[32m    <property name="nodejs_npm_path_reset_for_default_project" value="true" />[m
[32m+[m[32m  </component>[m
[32m+[m[32m</project>[m
\ No newline at end of file[m
[1mdiff --git a/components/mailserver/mailservers.component.js b/components/mailserver/mailservers.component.js[m
[1mnew file mode 100644[m
[1mindex 0000000..7998314[m
[1m--- /dev/null[m
[1m+++ b/components/mailserver/mailservers.component.js[m
[36m@@ -0,0 +1,40 @@[m
[32m+[m[32mconst mailserver = require('../../configs/mailserver');[m
[32m+[m
[32m+[m[32mclass MailserversComponent {[m
[32m+[m
[32m+[m[32m    sendEmail(data) {[m
[32m+[m[32m        const mailOptions = {[m
[32m+[m[32m            from: `Cloud Social WiFi+ <info@seed-soft.com>`,[m
[32m+[m[32m            to: `${data.email}`,[m
[32m+[m[32m        };[m
[32m+[m
[32m+[m[32m        const template = `template/`;[m
[32m+[m
[32m+[m[32m        return new Promise((resolve, reject) => {[m
[32m+[m[32m            // resolve(data);[m
[32m+[m[32m            switch (data.action) {[m
[32m+[m[32m                case 'recoverypassword':[m
[32m+[m[32m                    mailOptions.subject = `Password Reset`;[m
[32m+[m[32m                    mailOptions.html = "<b>Mail reset password</b>";[m
[32m+[m[32m                    break;[m
[32m+[m
[32m+[m[32m                case 'welcome':[m
[32m+[m[32m                    mailOptions.subject = `Welcome to Cloud Social WiFi+`;[m
[32m+[m[32m                    mailOptions.html = "<b>Welcome to Cloud Social WiFi+</b>";[m
[32m+[m[32m                    break;[m
[32m+[m
[32m+[m[32m                default:[m
[32m+[m[32m                    mailOptions.subject = `Cloud Social WiFi+`;[m
[32m+[m[32m                    mailOptions.html = ``;[m
[32m+[m[32m                    break;[m
[32m+[m[32m            }[m
[32m+[m
[32m+[m
[32m+[m[32m            mailserver.sendMail(mailOptions, (err, res) => {[m
[32m+[m[32m                res ? resolve(res) : reject(err);[m
[32m+[m[32m            });[m
[32m+[m[32m        });[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = MailserversComponent;[m
\ No newline at end of file[m
[1mdiff --git a/configs/config.js b/configs/config.js[m
[1mnew file mode 100644[m
[1mindex 0000000..73d5b60[m
[1m--- /dev/null[m
[1m+++ b/configs/config.js[m
[36m@@ -0,0 +1,21 @@[m
[32m+[m[32mmodule.exports = function (req, res, next) {[m
[32m+[m
[32m+[m[32m    // Send data json & status[m
[32m+[m[32m    res.sendApi = function (data, status = 200) {[m
[32m+[m[32m        res.setHeader('content-type', 'application/json');[m
[32m+[m[32m        res.status(status);[m
[32m+[m[32m        res.json(data);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Send data response[m
[32m+[m[32m     * @param {Promise} promise[m
[32m+[m[32m     */[m
[32m+[m[32m    res.sendAsyncApi = function (promise) {[m
[32m+[m[32m        promise[m
[32m+[m[32m            .then(item => res.sendApi(item))[m
[32m+[m[32m            .catch(error => res.sendApi(error, 400));[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    next();[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/configs/mailserver.js b/configs/mailserver.js[m
[1mnew file mode 100644[m
[1mindex 0000000..aab123c[m
[1m--- /dev/null[m
[1m+++ b/configs/mailserver.js[m
[36m@@ -0,0 +1,11 @@[m
[32m+[m[32mconst nodemailer = require("nodemailer");[m
[32m+[m
[32m+[m[32mconst mailserver = nodemailer.createTransport({[m
[32m+[m[32m    service: "gmail",[m
[32m+[m[32m    auth: {[m
[32m+[m[32m        user: "supportmail@seed-soft.com",[m
[32m+[m[32m        pass: "seedsoft"[m
[32m+[m[32m    }[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mmodule.exports = mailserver;[m
[1mdiff --git a/configs/route.js b/configs/route.js[m
[1mnew file mode 100644[m
[1mindex 0000000..6802352[m
[1m--- /dev/null[m
[1m+++ b/configs/route.js[m
[36m@@ -0,0 +1,29 @@[m
[32m+[m[32mconst router = require('express').Router();[m
[32m+[m[32mconst {check, validationResult} = require('express-validator/check');[m
[32m+[m
[32m+[m[32m// Message Validation[m
[32m+[m[32mconst msgRequired = 'กรุณากรอกข้อมูล';[m
[32m+[m[32mconst msgIsEmail = 'กรุณากรอกข้อมูลให้อยู่ในรูปแบบอีเมล'[m
[32m+[m[32mconst msgIsNumeric = 'กรุณากรอกข้อมูลให้อยู่ในรูปแบบตัวเลข';[m
[32m+[m[32mconst month = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];[m
[32m+[m
[32m+[m[32m// Components[m
[32m+[m
[32m+[m[32m// Route Mailserver[m
[32m+[m[32mconst MailserversComponent = require('../components/mailserver/mailservers.component');[m
[32m+[m[32mconst Mailservers = new MailserversComponent();[m
[32m+[m[32mrouter.post('/v1/mailservers', [[m
[32m+[m[32m    check('email')[m
[32m+[m[32m        .not().isEmpty().withMessage(msgRequired)[m
[32m+[m[32m        .isEmail().withMessage(msgIsEmail),[m
[32m+[m[32m    check('action')[m
[32m+[m[32m        .not().isEmpty().withMessage(msgRequired)[m
[32m+[m[32m], (req, res) => {[m
[32m+[m[32m    const errors = validationResult(req);[m
[32m+[m[32m    if (!errors.isEmpty()) {[m
[32m+[m[32m        return res.status(422).json({errors: errors.array()});[m
[32m+[m[32m    }[m
[32m+[m[32m    res.sendAsyncApi(Mailservers.sendEmail(req.body));[m
[32m+[m[32m})[m
[32m+[m
[32m+[m[32mmodule.exports = router;[m
\ No newline at end of file[m
[1mdiff --git a/index.js b/index.js[m
[1mindex fd51b4a..d89699a 100644[m
[1m--- a/index.js[m
[1m+++ b/index.js[m
[36m@@ -1,10 +1,47 @@[m
[31m-var express = require("express");[m
[31m-var app = express();[m
[32m+[m[32mconst express = require('express');[m
[32m+[m[32mconst bodyParser = require('body-parser');[m
[32m+[m[32mconst app = express();[m
[32m+[m[32mconst port = 3000;[m
 [m
[31m-app.get("/", function(req, res) {[m
[31m-  res.send("Hello World!");[m
[32m+[m[32mapp.use(function (req, res, next) {[m
[32m+[m[32m    // Website you wish to allow to connect[m
[32m+[m[32m    res.setHeader('Access-Control-Allow-Origin', '*');[m
[32m+[m
[32m+[m[32m    // Request methods you wish to allow[m
[32m+[m[32m    res.setHeader('Access-Control-Allow-Methods', 'GET, POST, OPTIONS, PUT, PATCH, DELETE');[m
[32m+[m
[32m+[m[32m    // Request headers you wish to allow[m
[32m+[m[32m    res.setHeader('Access-Control-Allow-Headers', '*');[m
[32m+[m
[32m+[m[32m    // Set to true if you need the website to include cookies in the requests sent[m
[32m+[m[32m    // to the API (e.g. in case you use sessions)[m
[32m+[m[32m    res.setHeader('Access-Control-Allow-Credentials', true);[m
[32m+[m
[32m+[m[32m    // Pass to next layer of middleware[m
[32m+[m[32m    next();[m
 });[m
 [m
[31m-app.listen(3000, function() {[m
[31m-  console.log("Example app listening on port 3000!");[m
[31m-});[m
\ No newline at end of file[m
[32m+[m[32m// Define public folder[m[41m [m
[32m+[m[32mapp.use('/', express.static(__dirname + '/public'));[m
[32m+[m[32m/**[m
[32m+[m[32m * lib body-parser[m
[32m+[m[32m * - parse application/x-www-form-urlencoded[m
[32m+[m[32m * - parse application/json[m
[32m+[m[32m */[m
[32m+[m[32mapp.use(bodyParser.urlencoded({ extended: false }));[m
[32m+[m[32mapp.use(bodyParser.json());[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Config project express[m
[32m+[m[32m * - New function express[m
[32m+[m[32m * - Route express[m
[32m+[m[32m */[m
[32m+[m[32mapp.use(require('./configs/config'));[m
[32m+[m[32mapp.use('/api/', require('./configs/route'));[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Response index.html[m
[32m+[m[32m * running port 3000[m
[32m+[m[32m */[m
[32m+[m[32mapp.get('/', (req, res) => res.sendFile(__dirname + '/public/index.html'));[m
[32m+[m[32mapp.listen(port, () => console.log(`Api listening on port ${port}`))[m
\ No newline at end of file[m
[1mdiff --git a/package-lock.json b/package-lock.json[m
[1mindex da1dcdf..d006e8c 100644[m
[1m--- a/package-lock.json[m
[1m+++ b/package-lock.json[m
[36m@@ -4,6 +4,11 @@[m
   "lockfileVersion": 1,[m
   "requires": true,[m
   "dependencies": {[m
[32m+[m[32m    "abbrev": {[m
[32m+[m[32m      "version": "1.1.1",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/abbrev/-/abbrev-1.1.1.tgz",[m
[32m+[m[32m      "integrity": "sha512-nne9/IiQ/hzIhY6pdDnbBtz7DjPTKrY00P/zvPSm5pOFkl6xuGrGnXn/VtTNNfNtAfZ9/1RtehkszU9qcTii0Q=="[m
[32m+[m[32m    },[m
     "accepts": {[m
       "version": "1.3.5",[m
       "resolved": "https://registry.npmjs.org/accepts/-/accepts-1.3.5.tgz",[m
[36m@@ -13,11 +18,188 @@[m
         "negotiator": "0.6.1"[m
       }[m
     },[m
[32m+[m[32m    "ajv": {[m
[32m+[m[32m      "version": "6.6.2",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.6.2.tgz",[m
[32m+[m[32m      "integrity": "sha512-FBHEW6Jf5TB9MGBgUUA9XHkTbjXYfAUjY43ACMfmdMRHniyoMHjHjzD50OK8LGDWQwp4rWEsIq5kEqq7rvIM1g==",[m
[32m+[m[32m      "requires": {[m
[32m+[m[32m        "fast-deep-equal": "^2.0.1",[m
[32m+[m[32m        "fast-json-stable-stringify": "^2.0.0",[m
[32m+[m[32m        "json-schema-traverse": "^0.4.1",[m
[32m+[m[32m        "uri-js": "^4.2.2"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
[32m+[m[32m    "ansi-align": {[m
[32m+[m[32m      "version": "2.0.0",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/ansi-align/-/ansi-align-2.0.0.tgz",[m
[32m+[m[32m      "integrity": "sha1-w2rsy6VjuJzrVW82kPCx2eNUf38=",[m
[32m+[m[32m      "requires": {[m
[32m+[m[32m        "string-width": "^2.0.0"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
[32m+[m[32m    "ansi-regex": {[m
[32m+[m[32m      "version": "3.0.0",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-3.0.0.tgz",[m
[32m+[m[32m      "integrity": "sha1-7QMXwyIGT3lGbAKWa922Bas32Zg="[m
[32m+[m[32m    },[m
[32m+[m[32m    "ansi-styles": {[m
[32m+[m[32m      "version": "3.2.1",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",[m
[32m+[m[32m      "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",[m
[32m+[m[32m      "requires": {[m
[32m+[m[32m        "color-convert": "^1.9.0"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
[32m+[m[32m    "anymatch": {[m
[32m+[m[32m      "version": "2.0.0",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/anymatch/-/anymatch-2.0.0.tgz",[m
[32m+[m[32m      "integrity": "sha512-5teOsQWABXHHBFP9y3skS5P3d/WfWXpv3FUpy+LorMrNYaT9pI4oLMQX7jzQ2KklNpGpWHzdCXTDT2Y3XGlZBw==",[m
[32m+[m[32m      "requires": {[m
[32m+[m[32m        "micromatch": "^3.1.4",[m
[32m+[m[32m        "normalize-path": "^2.1.1"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
[32m+[m[32m    "arr-diff": {[m
[32m+[m[32m      "version": "4.0.0",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/arr-diff/-/arr-diff-4.0.0.tgz",[m
[32m+[m[32m      "integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="[m
[32m+[m[32m    },[m
[32m+[m[32m    "arr-flatten": {[m
[32m+[m[32m      "version": "1.1.0",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/arr-flatten/-/arr-flatten-1.1.0.tgz",[m
[32m+[m[32m      "integrity": "sha512-L3hKV5R/p5o81R7O02IGnwpDmkp6E982XhtbuwSe3O4qOtMMMtodicASA1Cny2U+aCXcNpml+m4dPsvsJ3jatg=="[m
[32m+[m[32m    },[m
[32m+[m[32m    "arr-union": {[m
[32m+[m[32m      "version": "3.1.0",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/arr-union/-/arr-union-3.1.0.tgz",[m
[32m+[m[32m      "integrity": "sha1-45sJrqne+Gao8gbiiK9jkZuuOcQ="[m
[32m+[m[32m    },[m
     "array-flatten": {[m
       "version": "1.1.1",[m
       "resolved": "https://registry.npmjs.org/array-flatten/-/array-flatten-1.1.1.tgz",[m
       "integrity": "sha1-ml9pkFGx5wczKPKgCJaLZOopVdI="[m
     },[m
[32m+[m[32m    "array-unique": {[m
[32m+[m[32m      "version": "0.3.2",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/array-unique/-/array-unique-0.3.2.tgz",[m
[32m+[m[32m      "integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="[m
[32m+[m[32m    },[m
[32m+[m[32m    "asn1": {[m
[32m+[m[32m      "version": "0.2.4",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/asn1/-/asn1-0.2.4.tgz",[m
[32m+[m[32m      "integrity": "sha512-jxwzQpLQjSmWXgwaCZE9Nz+glAG01yF1QnWgbhGwHI5A6FRIEY6IVqtHhIepHqI7/kyEyQEagBC5mBEFlIYvdg==",[m
[32m+[m[32m      "requires": {[m
[32m+[m[32m        "safer-buffer": "~2.1.0"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
[32m+[m[32m    "assert-plus": {[m
[32m+[m[32m      "version": "1.0.0",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz",[m
[32m+[m[32m      "integrity": "sha1-8S4PPF13sLHN2RRpQuTpbB5N1SU="[m
